/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//Layers Aliases
#define EN_base 0
#define EN_symbols 1
#define EN_func_move 2
#define PT_base 3
#define PT_symbols 4
#define PT_func_move 5
#define Blue_layers 6

// Aliases
#define PT_BSLS GRAVE  // (backslash)
#define PT_1    NUMBER_1    // 1
#define PT_2    NUMBER_2    // 2
#define PT_3    NUMBER_3    // 3
#define PT_4    NUMBER_4    // 4
#define PT_5    NUMBER_5    // 5
#define PT_6    NUMBER_6    // 6
#define PT_7    NUMBER_7    // 7
#define PT_8    NUMBER_8    // 8
#define PT_9    NUMBER_9    // 9
#define PT_0    NUMBER_0    // 0
#define PT_SINGLE_QUOTE MINUS // '
#define PT_LDAQ EQUAL  // «
#define PT_Q    Q    // Q
#define PT_W    W    // W
#define PT_E    E    // E
#define PT_R    R    // R
#define PT_T    T    // T
#define PT_Y    Y    // Y
#define PT_U    U    // U
#define PT_I    I    // I
#define PT_O    O    // O
#define PT_P    P    // P
#define PT_PLUS LEFT_BRACKET // +
#define PT_ACUT RIGHT_BRACKET // ´ (dead)
#define PT_A    A    // A
#define PT_S    S    // S
#define PT_D    D    // D
#define PT_F    F    // F
#define PT_G    G    // G
#define PT_H    H    // H
#define PT_J    J    // J
#define PT_K    K    // K
#define PT_L    L    // L
#define PT_CED SEMICOLON // Ç
#define PT_MORD SINGLE_QUOTE // º
#define PT_TILDE NUHS // ~ (dead)
#define PT_LESS_THAN NUBS // <
#define PT_Z    Z    // Z
#define PT_X    X    // X
#define PT_C    C    // C
#define PT_V    V    // V
#define PT_B    B    // B
#define PT_N    N    // N
#define PT_M    M    // M
#define PT_COMMA COMMA // ,
#define PT_DOT  PERIOD  // .
#define PT_MINUS SLASH // -
#define PT_PIPE BACKSLASH // |
#define PT_EXLM LS(PT_1)    // !
#define PT_DQUO LS(PT_2)    // "
#define PT_HASH LS(PT_3)    // #
#define PT_DLR  LS(PT_4)    // $
#define PT_PERC LS(PT_5)    // %
#define PT_AMPR LS(PT_6)    // &
#define PT_SLSH LS(PT_7)    // /
#define PT_LPRN LS(PT_8)    // (
#define PT_RPRN LS(PT_9)    // )
#define PT_EQL  LS(PT_0)    // =
#define PT_QUES LS(PT_QUOT) // ?
#define PT_RDAQ LS(PT_LDAQ) // »
#define PT_ASTR LS(PT_PLUS) // *
#define PT_GRV  LS(PT_ACUT) // ` (dead)
#define PT_FORD LS(PT_MORD) // ª
#define PT_CIRC LS(PT_TILDE) // ^ (dead)
#define PT_GREATER_THAN S(PT_LABK) // >
#define PT_SCLN LS(PT_COMMA) // ;
#define PT_COLN LS(PT_DOT)  // :
#define PT_UNDS LS(PT_MINUS) // _
#define PT_AT   RA(PT_2)    // @
#define PT_PND  RA(PT_3)    // £
#define PT_SECT RA(PT_4)    // §
#define PT_LCBR RA(PT_7)    // {
#define PT_LBRC RA(PT_8)    // [
#define PT_RBRC RA(PT_9)    // ]
#define PT_RCBR RA(PT_0)    // }
#define PT_DIAE RA(PT_PLUS) // ¨ (dead)
#define PT_EURO RA(PT_E)    // €



/ {
    combos {
        compatible = "zmk,combos";

    };

    keymap {
        compatible = "zmk,keymap";

        en_base {
            display-name = "EN_base";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O       &kp P      &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K          &kp L       &kp SEMI   &kp SINGLE_QUOTE
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp PERIOD  &kp SLASH  &kp ESC
                              &kp LEFT_GUI  &to EN_symbols  &kp SPACE    &kp ENTER  &to Blue_layers  &kp RIGHT_ALT
            >;
        };

        en_symbol {
            display-name = "EN_symbols";
            bindings = <
&kp TAB     &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4    &kp NUMBER_5            &kp NUMBER_6           &kp NUMBER_7     &kp NUMBER_8       &kp NUMBER_9   &kp NUMBER_0  &kp BACKSPACE
&kp LSHIFT  &kp EQUAL     &kp SINGLE_QUOTE  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp AMPERSAND  &kp PIPE      &kp QUESTION
&kp LCTRL   &kp MINUS     &kp CARET         &kp TILDE         &kp BACKSLASH   &kp LESS_THAN           &kp GREATER_THAN       &kp SLASH        &kp PERCENT        &kp ASTERISK   &kp PLUS      &kp EXCLAMATION
                                            &kp LGUI          &to EN_func_move          &kp SPACE               &kp ENTER              &to EN_base           &kp RIGHT_ALT
            >;
        };

        en_nav {
            display-name = "EN_func_move"; 
            bindings = <
&kp TAB    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans       &kp F1   &kp F2   &kp F3  &kp F4  &kp F5  &kp BACKSPACE
&kp LSHFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans       &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &kp DELETE
&kp LCTRL  &kp Z           &kp X           &kp C         &kp V            &trans       &kp F11  &kp F12  &trans  &trans  &trans  &kp INSERT
                                           &kp LGUI      &to PT_base           &kp SPACE    &kp ENTER  &to EN_symbols  &kp RIGHT_ALT
            >;
        };

        pt_base {
            display-name = "PT_base";
            bindings = <
&kp TAB         &kp PT_Q  &kp PT_W  &kp PT_E         &kp PT_R  &kp PT_T        &kp PT_Y      &kp PT_U  &kp PT_I          &kp PT_O       &kp PT_P      &kp BACKSPACE
&kp LEFT_SHIFT  &kp PT_A  &kp PT_S  &kp PT_D         &kp PT_F  &kp PT_G        &kp PT_H      &kp PT_J  &kp PT_K          &kp PT_L       &kp PT_CED   &kp PT_SINGLE_QUOTE
&kp LCTRL       &kp PT_Z  &kp PT_X  &kp PT_C         &kp PT_V  &kp PT_B        &kp PT_N      &kp PT_M  &kp PT_COMMA      &kp PT_DOT  &kp PT_SLSH  &kp ESC
                              &kp LEFT_GUI  &to PT_symbols  &kp SPACE    &kp ENTER  &to EN_func_move  &kp RIGHT_ALT
            >;
        };

        pt_symbol {
            display-name = "PT_symbols";
            bindings = <
&kp TAB     &kp PT_1  &kp PT_2      &kp PT_3      &kp PT_4    &kp PT_5                                &kp PT_6           &kp PT_7     &kp PT_8       &kp PT_9   &kp PT_0  &kp BACKSPACE
&kp LSHIFT  &kp PT_EQL     &kp PT_SINGLE_QUOTE  &kp PT_LCBR  &kp PT_LBRC  &kp PT_LPRN                 &kp PT_RPRN  &kp PT_RBRC  &kp PT_RCBR  &kp PT_AMPR  &kp PT_PIPE      &kp PT_QUES
&kp LCTRL   &kp PT_MINUS   &kp PT_CIRC         &kp PT_TILDE  &kp PT_BSLS   &kp PT_LESS_THAN           &kp PT_GREATER_THAN       &kp PT_SLSH        &kp PT_PERC        &kp PT_ASTR   &kp PT_PLUS      &kp PT_EXLM
                                            &kp LGUI          &to PT_func_move          &kp SPACE               &kp ENTER              &to PT_base          &kp RIGHT_ALT
            >;
        };

        pt_nav {
            display-name = "PT_func_move"; 
            bindings = <
&kp TAB    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans       &kp F1   &kp F2   &kp F3  &kp F4  &kp F5  &kp BACKSPACE
&kp LSHFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans       &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &kp DELETE
&kp LCTRL  &kp Z           &kp X           &kp C         &kp V            &trans       &kp F11  &kp F12  &trans  &trans  &trans  &kp INSERT
                                           &kp LGUI      &to Blue_layers          &kp SPACE    &kp ENTER  &to PT_symbols  &kp RIGHT_ALT
            >;
        };

        Blue_Func {
            display-name = "Blue_layers";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4    &kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &trans
&kp K_MUTE  &kp K_PLAY_PAUSE  &kp K_PREVIOUS  &kp K_FORWARD  &kp C_VOL_DN  &kp C_VOL_UP    &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans
&trans      &trans            &trans          &trans         &trans        &trans          &kp F11  &kp F12  &trans  &trans  &trans   &trans
                                              &kp LGUI       &to EN_base   &kp SPACE       &kp ENTER   &to PT_func_move    &kp RIGHT_ALT
            >;
        };
    };
};
